"""
Альтернативный генератор ответов когда OpenAI недоступен
"""

import random

class FallbackAIGenerator:
    """Генератор ответов без использования OpenAI API"""

    def __init__(self):
        self.responses = {
            "positive": [
                "Благодарим за ваш отзыв, [имя]! Мы рады, что вам понравился наш товар.",
                "Спасибо за высокую оценку, [имя]! Приятно слышать такие отзывы.",
                "Большое спасибо, [имя]! Мы стараемся для наших покупателей.",
                "Огромное спасибо за отзыв, [имя]! Рады, что наш товар вас порадовал.",
                "Благодарим за вашу оценку, [имя]! Мы ценим ваше мнение."
            ],
            "neutral": [
                "Спасибо за ваш отзыв, [имя]! Мы учтем ваше мнение.",
                "Благодарим за обратную связь, [имя]! Мы работаем над улучшением.",
                "Спасибо за оценку, [имя]! Ваше мнение важно для нас.",
                "Благодарим за отзыв, [имя]! Мы постоянно совершенствуем наш сервис.",
                "Спасибо за ваше мнение, [имя]! Мы прислушаемся к вашему отзыву."
            ],
            "negative": [
                "Приносим извинения за неудобства, [имя]. Мы разберемся в ситуации.",
                "Сожалеем о возникших проблемах, [имя]. Мы примем меры.",
                "Извините за доставленные неудобства, [имя]. Мы уже работаем над решением.",
                "Приносим свои извинения, [имя]. Мы обязательно исправим эту ситуацию.",
                "Просим прощения за неудобства, [имя]. Мы уже занимаемся этим вопросом."
            ]
        }

    def generate_reply(self, review_text: str, product_name: str = "",
                      rating: int = 5, user_name: str = "",
                      pros: str = "", cons: str = "") -> str:
        """Генерирует ответ на основе шаблонов"""

        # Определяем тип отзыва по рейтингу
        if rating >= 4:
            response_type = "positive"
        elif rating <= 2:
            response_type = "negative"
        else:
            response_type = "neutral"

        # Выбираем случайный шаблон
        template = random.choice(self.responses[response_type])

        # Заменяем плейсхолдер имени
        if user_name and user_name.strip():
            response = template.replace("[имя]", user_name.strip())
        else:
            response = template.replace("[имя]", "")

        # Добавляем упоминание товара если есть
        if product_name:
            response = response.replace("товар", f"товар '{product_name}'")

        print(f"📝 Локальный шаблон: {response}")
        return response
