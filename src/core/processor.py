from typing import List
from src.api.models import WBReview
from src.ai.generator import AIGenerator

class ReviewProcessor:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∑—ã–≤–æ–≤"""

    def __init__(self, ai_generator: AIGenerator):
        self.ai_generator = ai_generator
        self.processed_ids = set()

    def should_process(self, review: WBReview) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—Ç–∑—ã–≤"""
        if review.id in self.processed_ids:
            return False

        if not review.has_text:
            return False

        if len(review.text.strip()) < 5 and any(char.isdigit() for char in review.text):
            return False

        return True

    def process_reviews(self, reviews: List[WBReview]) -> List[dict]:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –æ—Ç–∑—ã–≤–æ–≤"""
        if not reviews:
            print("üì≠ –ù–µ—Ç –æ—Ç–∑—ã–≤–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")
            return []

        results = []

        for review in reviews:
            print(f"\n--- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∑—ã–≤–∞ ---")
            print(f"üìÑ –û—Ç–∑—ã–≤ ID: {review.id}")
            print(f"‚≠ê –†–µ–π—Ç–∏–Ω–≥: {review.rating}/5")
            print(f"üë§ –ò–º—è: {review.user_name if review.user_name else '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}")

            # –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—è—Ö
            if review.text:
                print(f"üí¨ –¢–µ–∫—Å—Ç: {review.text[:100]}{'...' if len(review.text) > 100 else ''}")
            if review.pros:
                print(f"üëç Pros: {review.pros[:100]}{'...' if len(review.pros) > 100 else ''}")
            if review.cons:
                print(f"üëé Cons: {review.cons[:100]}{'...' if len(review.cons) > 100 else ''}")

            if not self.should_process(review):
                print("‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–∑—ã–≤")
                continue

            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –∏—Å–ø–æ–ª—å–∑—É—è –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞
            reply = self.ai_generator.generate_reply(
                review_text=review.review_text,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–≤–æ–π—Å—Ç–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ –ø–æ–ª—è
                product_name=review.product_name,
                rating=review.rating,
                user_name=review.user_name,
                pros=review.pros,
                cons=review.cons
            )

            if reply:
                results.append({
                    "review": review,
                    "reply": reply,
                    "success": True
                })
                self.processed_ids.add(review.id)
                print(f"‚úÖ –û—Ç–≤–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –¥–ª—è –æ—Ç–∑—ã–≤–∞ {review.id}")
            else:
                results.append({
                    "review": review,
                    "reply": "",
                    "success": False
                })
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç –¥–ª—è –æ—Ç–∑—ã–≤–∞ {review.id}")

        return results
