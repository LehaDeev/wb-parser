#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–æ—Ç–∞
"""

import sys
import os

sys.path.insert(0, os.path.dirname(__file__))

from src.config.settings import settings
from src.api.wb_client import WBAPIClient
from src.ai.generator import AIGenerator

def quick_check():
    """–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"""
    print("üîç –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê –ë–û–¢–ê")
    print("=" * 40)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    print("‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print(f"   WB API Key: {'‚úÖ' if settings.WB_API_KEY else '‚ùå'}")
    print(f"   Supplier ID: {'‚úÖ' if settings.SUPPLIER_ID else '‚ùå'}")
    print(f"   AI Provider: {settings.AI_PROVIDER}")
    print(f"   Test Mode: {settings.TEST_MODE}")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API
    print("\nüåê API Wildberries:")
    try:
        client = WBAPIClient(test_mode=True)
        reviews = client.get_unanswered_reviews()
        print(f"   ‚úÖ –ö–ª–∏–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç ({len(reviews)} —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤)")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ AI
    print("\nü§ñ AI –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä:")
    try:
        ai = AIGenerator(test_mode=True)
        response = ai.generate_reply("–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç–∑—ã–≤", "–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä", 5, "–¢–µ—Å—Ç")
        print(f"   ‚úÖ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç: {response[:50]}...")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

    print("\nüí° –î–ª—è –ø–æ–ª–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python scripts/status.py")

if __name__ == "__main__":
    quick_check()
